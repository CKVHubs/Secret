local Players = game:GetService("Players")

local function viewPlayer(playerName)
  -- Improved player matching using string patterns
  local foundPlayers = {}
  for _, player in pairs(Players:GetPlayers()) do
    if string.lower(player.Name):find("^" .. string.lower(playerName) .. ".*") then -- Match beginning and any characters, case-insensitive
      foundPlayers[#foundPlayers + 1] = player
    end
  end

  if #foundPlayers == 0 then
    print("Player not found: " .. playerName)
  elseif #foundPlayers == 1 then
    -- View the single matching player
    local player = foundPlayers[1]
    workspace.CurrentCamera.CameraSubject = player.Character
    player.Character.Humanoid.CameraMode = Enum.CameraMode.LockFirstPerson -- (Optional)
  else
    -- Multiple players matched, prompt for disambiguation
    local choices = {}
    for i, player in ipairs(foundPlayers) do
      choices[i] = player.Name
    end
    local selectedIndex = game:GetService("UserInputService"):PromptSelection({
      Title = "Multiple players found!",
      Description = "Select the player you want to view:",
      Options = choices,
    })
    if selectedIndex then
      local player = foundPlayers[selectedIndex]
      workspace.CurrentCamera.CameraSubject = player.Character
      player.Character.Humanoid.CameraMode = Enum.CameraMode.LockFirstPerson -- (Optional)
    end
  end
end

local function unviewPlayer()
  workspace.CurrentCamera.CameraSubject = Players.LocalPlayer.Character
  if Players.LocalPlayer.Character then -- Check if local player's character exists
    Players.LocalPlayer.Character.Humanoid.CameraMode = Enum.CameraMode.FreeExplore -- Reset camera mode (Optional)
  end
end

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.OnMessageDoneFiltering.OnClientEvent:Connect(function(messageData)
  local message = messageData.Message
  if string.sub(message, 1, 6) == "/view " then
    local playerName = string.sub(message, 7)
    viewPlayer(playerName)
  elseif message == "/unview" then
    unviewPlayer()
  end
end)

-- ///////////////////////////////////// THE NEXT IS RESET CHARACTER

-- Listen for new players
game.Players.PlayerAdded:Connect(function(player)
  -- Chat message listener for the new player
  player.Chatted:Connect(function(message)
    if message:lower() == "/re" then
      player.Character:BreakJoints()
    end
  end)
end)

-- Check existing players at script start
for _, player in pairs(game.Players:GetPlayers()) do
  -- Chat message listener for existing players
  player.Chatted:Connect(function(message)
    if message:lower() == "/re" then
      player.Character:BreakJoints()
    end
  end)
end

-- ///////////////////////////////////// THE NEXT IS WALKSPEED & JUMPPOWER

game.Players.PlayerAdded:Connect(function(player)
  player.Chatted:Connect(function(message)
    local parts = message:split(" ")
    if parts[1]:lower() == "/speed" then
      local speed = tonumber(parts[2])
      if speed then
        player.Character.Humanoid.WalkSpeed = speed
      end
    elseif parts[1]:lower() == "/unspeed" then
      player.Character.Humanoid.WalkSpeed = 16
    elseif parts[1]:lower() == "/jump" then
      local jumppower = tonumber(parts[2])
      if jumppower then
        player.Character.Humanoid.JumpPower = jumppower
      end
    elseif parts[1]:lower() == "/unjump" then
      player.Character.Humanoid.JumpPower = 50
    end
  end)
end)

for _, player in pairs(game.Players:GetPlayers()) do
  player.Chatted:Connect(function(message)
    local parts = message:split(" ")
    if parts[1]:lower() == "/speed" then
      local speed = tonumber(parts[2])
      if speed then
        player.Character.Humanoid.WalkSpeed = speed
      end
    elseif parts[1]:lower() == "/unspeed" then
      player.Character.Humanoid.WalkSpeed = 16
    elseif parts[1]:lower() == "/jump" then
      local jumppower = tonumber(parts[2])
      if jumppower then
        player.Character.Humanoid.JumpPower = jumppower
      end
    elseif parts[1]:lower() == "/unjump" then
      player.Character.Humanoid.JumpPower = 50
    end
  end)
end

-- ///////////////////////////////////// THE NEXT IS ZOOM MAX

game.Players.PlayerAdded:Connect(function(player)
  player.Chatted:Connect(function(message)
    local parts = message:split(" ")
    if parts[1]:lower() == "/zoom" then
      local zoom = tonumber(parts[2])
      if zoom then
        player.CameraMaxZoomDistance = zoom
      end
    elseif parts[1]:lower() == "/unzoom" then
      player.CameraMaxZoomDistance = 12
    end
  end)
end)

for _, player in pairs(game.Players:GetPlayers()) do
  player.Chatted:Connect(function(message)
    local parts = message:split(" ")
    if parts[1]:lower() == "/zoom" then
      local zoom = tonumber(parts[2])
      if zoom then
        player.CameraMaxZoomDistance = zoom
      end
    elseif parts[1]:lower() == "/unzoom" then
      player.CameraMaxZoomDistance = 12
    end
  end)
end


game.Players.PlayerAdded:Connect(function(player)
  player.Chatted:Connect(function(message)
    local parts = message:split(" ")
    if parts[1]:lower() == "/unzoom" then
      player.CameraMaxZoomDistance = 12
    end
  end)
end)

-- ///////////////////////////////////// THE NEXT IS REMOVE TEXTURES

for _, player in pairs(game.Players:GetPlayers()) do
  player.Chatted:Connect(function(message)
    local parts = message:split(" ")
    if parts[1]:lower() == "/gfx" then
      loadstring(game:HttpGet("https://raw.githubusercontent.com/CKVHubs/Secret/main/GFX?token=GHSAT0AAAAAACT472YCOKN6KLEOCQSREFIKZTVKCKQ"))()
    elseif parts[1]:lower() == "/afkmode" then
      for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") then
          part.Transparency = 1
        end
      end
    elseif parts[1]:lower() == "/unafkmode" then
      for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") then
          part.Transparency = 0
        end
      end
    end
  end)
end

-- ///////////////////////////////////// THE NEXT IS TIME WORLD

for _, player in pairs(game.Players:GetPlayers()) do
  player.Chatted:Connect(function(message)
    local parts = message:split(" ")
    if parts[1]:lower() == "/day" then
      game.Lighting.ClockTime = 12
    elseif parts[1]:lower() == "/night" then
      game.Lighting.ClockTime = 18
    elseif parts[1]:lower() == "/settime" and #parts >= 2 then
      local time = tonumber(parts[2])
      if time then
        game.Lighting.ClockTime = time
      end
    end
  end)
end

-- ///////////////////////////////////// THE NEXT IS ESP

-- Import required libraries
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- Function to create the ESP
local function createESP()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            -- Create the ESP box
            local box = Instance.new("BoxHandleAdornment")
            box.Name = player.Name .. "ESP"
            box.Adornee = player.Character
            box.AlwaysOnTop = true
            box.ZIndex = 5
            box.Size = Vector3.new(3, 6, 2)
            box.Color3 = Color3.fromHSV(tick() % 5 / 5, 1, 1)
            box.Transparency = 0.5
            box.Parent = player.Character

            -- Create the name text
            local nameText = Instance.new("BillboardGui")
            nameText.Name = player.Name .. "NameText"
            nameText.Adornee = player.Character.Head
            nameText.Size = UDim2.new(1, 400, 1, 450)
            nameText.AlwaysOnTop = true
            local textLabel = Instance.new("TextLabel")
            textLabel.Text = player.Name
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.BackgroundTransparency = 1
            textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            textLabel.Parent = nameText
            nameText.Parent = player.Character
        end
    end
end

-- Function to update the ESP
local function updateESP()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            local box = player.Character:FindFirstChild(player.Name .. "ESP")
            local nameText = player.Character:FindFirstChild(player.Name .. "NameText")
            if box then
                box.Adornee = player.Character
                box.Color3 = Color3.fromHSV(tick() % 5 / 5, 1, 1)
            end
            if nameText then
                nameText.Adornee = player.Character.Head
            end
        end
    end
end

-- Function to delete the ESP
local function deleteESP()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            local box = player.Character:FindFirstChild(player.Name .. "ESP")
            local nameText = player.Character:FindFirstChild(player.Name .. "NameText")
            if box then
                box:Destroy()
            end
            if nameText then
                nameText:Destroy()
            end
        end
    end
end

-- Start the ESP when "/esp" is typed
for _, player in pairs(game.Players:GetPlayers()) do
    player.Chatted:Connect(function(message)
        local parts = message:split(" ")
        if parts[1]:lower() == "/esp" then
            createESP()
            RunService.RenderStepped:Connect(updateESP)
        end
    end)
end

-- Delete the ESP when "/unesp" is typed
for _, player in pairs(game.Players:GetPlayers()) do
    player.Chatted:Connect(function(message)
        local parts = message:split(" ")
        if parts[1]:lower() == "/unesp" then
            deleteESP()
        end
    end)
end

-- ///////////////////////////////////// THE NEXT IS SAVE LOCATION

local savedCFrame = nil
local loopBackEnabled = false

for _, player in pairs(game.Players:GetPlayers()) do
  player.Chatted:Connect(function(message)
    local parts = message:split(" ")
    if parts[1]:lower() == "/savetp" then
      savedCFrame = player.Character.HumanoidRootPart.CFrame
    elseif parts[1]:lower() == "/back" then
      if savedCFrame then
        player.Character.HumanoidRootPart.CFrame = savedCFrame
      end
    elseif parts[1]:lower() == "/loopback" then
      loopBackEnabled = true
      while loopBackEnabled do
        if savedCFrame then
          player.Character.HumanoidRootPart.CFrame = savedCFrame
        end
        wait(1) -- Adjust the wait time as needed
      end
    elseif parts[1]:lower() == "/unback" then
      loopBackEnabled = false
    end
  end)
end

-- ///////////////////////////////////// THE NEXT IS HIDE WORLD

for _, player in pairs(game.Players:GetPlayers()) do
  player.Chatted:Connect(function(message)
    local parts = message:split(" ")
    if parts[1]:lower() == "/gfxAFK" then
for _, part in pairs(workspace:GetDescendants()) do
    if part:IsA("BasePart") then
        part.Transparency = 1
    end
end
    end
  end)
end,

-- ///////////////////////////////////// THE NEXT IS TP TO PLAYERS

local Players = game:GetService("Players")

local function teleportToPlayer(playerName)
  -- Improved player matching using string patterns
  local foundPlayers = {}
  for _, player in pairs(Players:GetPlayers()) do
    if string.lower(player.Name):find("^" .. string.lower(playerName) .. ".*") then -- Match beginning and any characters, case-insensitive
      table.insert(foundPlayers, player)
    end
  end

  if #foundPlayers == 0 then
    print("Player not found: " .. playerName)
  elseif #foundPlayers == 1 then
    -- Teleport to the single matching player
    local player = foundPlayers[1]
    Players.LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
  else
    -- Multiple players matched, prompt for disambiguation
    local choices = {}
    for i, player in ipairs(foundPlayers) do
      choices[i] = player.Name
    end
    local selectedIndex = game:GetService("UserInputService"):PromptSelection({
      Title = "Multiple players found!",
      Description = "Select the player you want to teleport to:",
      Options = choices,
    })
    if selectedIndex then
      local player = foundPlayers[selectedIndex]
      Players.LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
    end
  end
end

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.OnMessageDoneFiltering.OnClientEvent:Connect(function(messageData)
  local message = messageData.Message
  if string.sub(message, 1, 4) == "/tp " then
    local playerName = string.sub(message, 5)
    teleportToPlayer(playerName)
  end
end)
